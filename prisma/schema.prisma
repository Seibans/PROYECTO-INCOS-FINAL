// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// REGENERAR LA BASE
// npx prisma generate --talvez
// npx prisma migrate reset
// npx prisma migrate dev --name migracion_inicial
// npx prisma migrate deploy
//npx prisma db push
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}



enum RolUsuario {
  ADMINISTRADOR
  USUARIO
}


model User {
  id            Int       @id @default(autoincrement())
  name          String?  @db.VarChar(255)
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String?
  rol           RolUsuario @default(USUARIO)
  accounts      Account[]
}

model Account {
  id                 Int       @id @default(autoincrement())
  userId             Int
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}



  // model User {
  //   id            Int       @id @default(autoincrement()) @db.Integer
  //   name          String?   @db.VarChar(255)
  //   email         String?   @unique
  //   emailVerified DateTime?
  //   image         String?
  //   password      String?   @db.VarChar(100)
  //   accounts      Account[]
  // }
